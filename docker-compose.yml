version: '3.4'

networks:
  frontend: 
  backend: 

services:
  productcatalog:
    image: jewels/catalog
    build:
      context: .\ProductCatalog
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=CatalogDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;"
      ExternalBaseUrl: http://localhost:7000
    ports:
      - "7000:80"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on: 
      - mssqlserver

  tokenserver:
    image: jewels/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=TokenServiceDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
      MvcClient: http://localhost:7500
    ports:
      - "7800:80"
    container_name: jewelstokenapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  cart:
    image: jewels/cartapi
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    environment:
      IdentityUrl: http://172.26.128.1:7800
      ConnectionString: basket.data
    ports:
      - "7010:80"
    container_name: jewelscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data
      - rabbitmq

  order:
    image: jewels/orderapi
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      IdentityUrl: http://172.26.128.1:7800
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=OrdersDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;"
    ports:
      - "7200:80"
    container_name: jewelsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - mssqlserver
      - rabbitmq

  jewelwebclient:
    image: jewels/jewelclient
    build: 
      context: .\JewelWebClient
      dockerfile: Dockerfile
    environment:
      CatalogUrl: http://productcatalog
      IdentityUrl: http://172.26.128.1:7800
      CallbackUrl: http://localhost:7500
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_51NEPo0GKwP748m7L2Kp8y3CLEdQEFWNdcyQDso7cFqq7VkREddZXRr28V1HCvvuq46caHme7v3iGLQRW1WAnWZsi00CpI9f9xZ
      StripePrivateKey: sk_test_51NEPo0GKwP748m7LPe8CXkWizejbFiYCePIKYz5UB3UXgQ04dHJhZhg0ucnPCQAckLY3dA1pQjXCvgfwm7eterqw00SEyjNnip
    ports:
      - "7500:80"
    container_name: webshop
    networks: 
      - frontend
    depends_on:
      - productcatalog
      - tokenserver
      - cart
      - order


  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    ports:
      - "7002:1433"
    container_name: jewelscatalogserver
    networks:
      - backend

  basket.data:
    image: redis
    ports:
      - "7050:6379"
    container_name: basketdata
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    networks:
      - backend 

